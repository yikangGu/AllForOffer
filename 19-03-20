Q1:

class Solution {
public:
    vector<int> multiply(const vector<int>& A) {
        int len = A.size();
        vector<int> b(len);
        int ret=1;
        for(int i=0; i<n; ret*=A[i++]){
            b[i]=ret;
        }
        ret=1;
        for(int i=n-1;i>=0;ret*=A[i--]){
            b[i]*=ret;
        }
        return b;
    }
};

Q2:
class Solution {
public:
    int longestConsecutive(vector<int> &num) {
        int len = num.size();
        if(len < 2) return 1;
        sort(num.begin(), num.end());
        int maxNum = 1;
        int oneNum = 1;
        for(int i = 1;i<len;i++)
        {
            if(num[i] - num[i-1] == 1)
            {
                oneNum++;
                maxNum = max(maxNum, oneNum);
            }else if(num[i] - num[i-1] == 0)
            {}else
                oneNum = 1;
        }
        return maxNum;
    }
};
