Q1:
class Solution {
public:
    int maxArea(vector<int>& height) {
        if(height.size()<2) return 0;
        int start,end;
        start = 0;
        end = height.size() -1;
        int vol = 0;
        while(start < end)
        {
            if(vol < (end-start)*min(height[start],height[end]))
                vol = (end-start)*min(height[start],height[end]);
            if(height[start]<height[end]){
                start++;
            }else{
                end--;
            }
        }
        return vol;
    }
};

Q2:
class Solution {
public:
    int maxProfit(vector<int>& prices) {
        if(prices.size() < 2) return 0;
        int len = prices.size();
        int start = 0;
        int min_ = prices[0];
        int diff = 0;
            
        for(int i=1;i<len;i++)
        {
            diff = max(diff, prices[i]-min_);
            min_ = min(prices[i],min_);
        }
        return diff;
    }
};
